datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Club {
  id          Int          @id @default(autoincrement())
  name        String
  city        String
  description String?
  imageUrl    String?
  location    Location?    @relation(fields: [locationId], references: [id])
  activities  Activity[]
  members     ClubMember[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  locationId Int?
}

model Location {
  id        Int    @id @default(autoincrement())
  address   String
  latitude  Float
  longitude Float
  club      Club[]
}

model Member {
  id          Int          @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String       @unique
  password    String
  phoneNumber String?
  clubs       ClubMember[]
  medicalDocs MedicalDoc[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Activity {
  id        Int      @id @default(autoincrement())
  name      String
  startTime DateTime
  endTime   DateTime
  club      Club?    @relation(fields: [clubId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clubId Int?
}

model MedicalDoc {
  id        Int      @id @default(autoincrement())
  title     String
  url       String
  member    Member   @relation(fields: [memberId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  memberId Int
}

model ClubMember {
  id       Int    @id @default(autoincrement())
  club     Club   @relation(fields: [clubId], references: [id])
  member   Member @relation(fields: [memberId], references: [id])
  clubId   Int
  memberId Int
}
